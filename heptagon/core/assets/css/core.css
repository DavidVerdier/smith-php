@import '../font-awesome/css/font-awesome.css';
/*  Material Design color palette (full) downloaded from
 *  http://htmlcolorcodes.com/color-charts/
 *
 *  Check out our powerful color picker
 *  http://htmlcolorcodes.com/color-picker/
 *
 *  Want to learn more about colors in SCSS?
 *  http://htmlcolorcodes.com/tutorials/
 *
 *  - - - - - - - - - - - - - - - - - - 
 *  Credits:
 *
 *  Original color palette by
 *  https://www.google.com/design/spec/style/color.html
 *
 *  - - - - - - - - - - - - - - - - - -
 *  How to use:
 *  
 *  Include this file with your other .scss files:
 *
 *  @import "material_colors_full";
 *  
 *  and use the color variables in your stylesheets:
 *	
 *  .class {
 *    color: @red-500;
 *  }
 *
 *  - - - - - - - - - - - - - - - - - -
 *  Note:
 *
 *  @color and @color-500 are the same, simply there
 *  for your convenience.
 *
 *  Variables with numbers prefixed by 'a' are accent colors
 */
/* Red */
/* Pink */
/* Purple */
/* Deep Purple */
/* Indigo */
/* Blue */
/* Light Blue */
/* Cyan */
/* Teal */
/* Green */
/* Light Green */
/* Lime */
/* Yellow */
/* Amber */
/* Orange */
/* Deep Orange */
/* Brown */
/* Grey */
/* Blue Grey */
/* White */
/* Black */
/*  Want more? Check our our other color palettes at
 *  http://htmlcolorcodes.com/color-charts/
 */
@import 'https://fonts.googleapis.com/css?family=Roboto';
.BorderLayout {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.BorderLayout > .BorderLayoutNorth {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.BorderLayout > .BorderLayoutWrap {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.BorderLayout > .BorderLayoutWrap > .BorderLayoutWest {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.BorderLayout > .BorderLayoutWrap > .BorderLayoutCenter {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.BorderLayout > .BorderLayoutWrap > .BorderLayoutEast {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.BorderLayout > .BorderLayoutSouth {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.FullHeightContainer {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  min-height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.SplitLayout {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.SplitLayout.vertical {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.SplitLayout.horizontal {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.SplitLayout > .SplitLayoutArea {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.FlowLayout {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
.FlowLayout.vertical {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.FlowLayout.horizontal {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.FlowLayout > .FlowLayoutArea {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}
.FlowLayout.fill > .FlowLayoutArea {
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
}
.Container {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.Button {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
.Button.vertical {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.Button.horizontal {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.Paper {
  background-color: #fafafa;
}
.Paper .lightText {
  color: #fafafa;
}
.Paper .lightText:after {
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 20%, transparent 21%);
}
.Paper .darkText {
  color: #212121;
}
.Paper .darkText:after {
  background-image: radial-gradient(circle, rgba(0, 0, 0, 0.3) 20%, transparent 21%);
}
.Paper .error,
.Paper .delete {
  background-color: #f44336;
  color: #fafafa;
}
.Paper .error:after,
.Paper .delete:after {
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 20%, transparent 21%);
}
.Paper .warning {
  background-color: #ff9800;
  color: #fafafa;
}
.Paper .warning:after {
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 20%, transparent 21%);
}
.Paper .success {
  background-color: #4caf50;
  color: #fafafa;
}
.Paper .success:after {
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 20%, transparent 21%);
}
.Paper .info {
  background-color: #2196f3;
  color: #212121;
}
.Paper .info:after {
  background-image: radial-gradient(circle, rgba(0, 0, 0, 0.3) 20%, transparent 21%);
}
.Paper .Button {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
  border: 0;
  outline: 0;
  padding: 0;
  border-radius: 2px;
  margin: 5px;
  text-decoration: none;
  transition: 0.5s all;
  transition-timing-function: cubic-bezier(0.3, 1, 0.3, 1);
  position: relative;
  overflow: hidden;
  color: #212121;
}
.Paper .Button::-moz-focus-inner {
  border: 0;
}
.Paper .Button:after {
  content: '';
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0%;
  left: 0%;
  pointer-events: none;
  background-repeat: no-repeat;
  background-position: 50%;
  -webkit-transform: scale(10, 10);
  -ms-transform: scale(10, 10);
  transform: scale(10, 10);
  opacity: 0.0;
  transition: 1.5s all;
  transition-timing-function: cubic-bezier(0.3, 1, 0.3, 1);
}
.Paper .Button:active:after {
  -webkit-transform: scale(0, 0);
  -ms-transform: scale(0, 0);
  transform: scale(0, 0);
  opacity: 1.0;
  transition: 0s;
}
.Paper .Button:after {
  background-image: radial-gradient(circle, transparent 20%, transparent 21%);
}
.Paper .Button:after {
  background-image: radial-gradient(circle, rgba(0, 0, 0, 0.3) 20%, transparent 21%);
}
.Paper .Button > .ButtonIcon {
  padding: 10px;
}
.Paper .Button > .ButtonLabel {
  padding: 10px;
}
.Paper .Button.vertical > .ButtonIcon + .ButtonLabel {
  padding-top: 0px;
}
.Paper .Button.horizontal > .ButtonIcon + .ButtonLabel {
  padding-left: 0px;
}
.Paper .Button.big > .ButtonIcon {
  padding: 20px;
}
.Paper .Button.big > .ButtonLabel {
  padding: 20px;
}
.Paper .Button.big.vertical > .ButtonIcon + .ButtonLabel {
  padding-top: 0px;
}
.Paper .Button.big.horizontal > .ButtonIcon + .ButtonLabel {
  padding-left: 0px;
}
.Paper .Button.floating {
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.0942809), 0 1.5px 2px rgba(0, 0, 0, 0.0673435);
  transition: 1s all;
  transition-timing-function: cubic-bezier(0.3, 1, 0.3, 1);
}
.Paper .Button.floating:hover {
  box-shadow: 0 12px 36px rgba(0, 0, 0, 0.23094011), 0 9px 12px rgba(0, 0, 0, 0.16495722);
  transition: 1s all;
  transition-timing-function: cubic-bezier(0.3, 1, 0.3, 1);
}
.Paper .Button:not(.floating):hover {
  background-color: #ff9800;
  color: #fafafa;
}
.Paper .Button:not(.floating):hover:after {
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.3) 20%, transparent 21%);
}
html {
  font-family: 'Roboto', sans-serif;
  font-size: 16px;
}
body {
  margin: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}
body * {
  position: relative;
}
body.debug div {
  outline: 1px solid #e91e63;
}
body.debug.all *:not(div) {
  outline: 1px solid #4caf50;
}
